# Import the ActiveDirectory module if not already loaded
try {
    Import-Module ActiveDirectory -ErrorAction Stop
} catch {
    Write-Error "Failed to import Active Directory module: $_"
    exit 1
}

# Get AD users with error handling
try {
    $ADusers = Get-ADUser -Filter * -Properties 'Name', 'msDS-UserPasswordExpiryTimeComputed' -ErrorAction Stop
} catch {
    Write-Error "Failed to retrieve AD users: $_"
    exit 1
}

# Process users with error handling
$results = @()
foreach ($user in $ADusers) {
    try {
        $expiryTime = if ($user.'msDS-UserPasswordExpiryTimeComputed' -eq 9223372036854775807) {
            "The password never expires."
        } elseif ($user.'msDS-UserPasswordExpiryTimeComputed') {
            [datetime]::FromFileTime($user.'msDS-UserPasswordExpiryTimeComputed').ToString("MM/dd/yyyy HH:mm:ss")
        } else {
            "The msDS-UserPasswordExpiryTimeComputed attribute is null or not set."
        }

        $results += [PSCustomObject]@{
            Name = $user.Name
            SamAccountName = $user.SamAccountName
            PasswordExpiryTime = $expiryTime
        }
    } catch {
        Write-Warning "Failed to process user $($user.Name): $_"
        # Add error entry to results
        $results += [PSCustomObject]@{
            Name = $user.Name
            SamAccountName = $user.SamAccountName
            PasswordExpiryTime = "Error: $_"
        }
        continue
    }
}

# Output results with error handling
try {
    $results | Sort-Object Name | Format-Table -AutoSize
} catch {
    Write-Error "Failed to format and display results: $_"
    # Fallback to simple output
    $results | Format-List
}
